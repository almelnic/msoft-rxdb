{"version":3,"file":"graphql-websocket.js","names":["_graphqlWs","require","_index","_isomorphicWs","_interopRequireDefault","WebSocket","IsomorphicWebSocket","ws","GRAPHQL_WEBSOCKET_BY_URL","exports","Map","getGraphQLWebSocket","url","headers","has","getFromMapOrCreate","wsClient","createClient","shouldRetry","webSocketImpl","connectionParams","undefined","socket","refCount","value","removeGraphQLWebSocketRef","obj","getFromMapOrThrow","delete","dispose"],"sources":["../../../../src/plugins/replication-graphql/graphql-websocket.ts"],"sourcesContent":["import { Client, createClient } from 'graphql-ws';\r\nimport { getFromMapOrCreate, getFromMapOrThrow } from '../../plugins/utils/index.ts';\r\nimport ws from 'isomorphic-ws';\r\n\r\nconst { WebSocket: IsomorphicWebSocket } = ws;\r\n\r\nexport type WebsocketWithRefCount = {\r\n    url: string;\r\n    socket: Client;\r\n    refCount: number;\r\n};\r\n\r\nexport const GRAPHQL_WEBSOCKET_BY_URL: Map<string, WebsocketWithRefCount> = new Map();\r\n\r\n\r\nexport function getGraphQLWebSocket(\r\n    url: string,\r\n    headers?: { [k: string]: string; }\r\n): Client {\r\n\r\n    const has = getFromMapOrCreate(\r\n        GRAPHQL_WEBSOCKET_BY_URL,\r\n        url,\r\n        () => {\r\n            const wsClient = createClient({\r\n                url,\r\n                shouldRetry: () => true,\r\n                webSocketImpl: IsomorphicWebSocket,\r\n                connectionParams: headers ? { headers } : undefined,\r\n            });\r\n            return {\r\n                url,\r\n                socket: wsClient,\r\n                refCount: 1\r\n            };\r\n        },\r\n        (value) => {\r\n            value.refCount = value.refCount + 1;\r\n        }\r\n    );\r\n    return has.socket;\r\n}\r\n\r\n\r\nexport function removeGraphQLWebSocketRef(\r\n    url: string\r\n) {\r\n    const obj = getFromMapOrThrow(GRAPHQL_WEBSOCKET_BY_URL, url);\r\n    obj.refCount = obj.refCount - 1;\r\n    if (obj.refCount === 0) {\r\n        GRAPHQL_WEBSOCKET_BY_URL.delete(url);\r\n        obj.socket.dispose();\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAC,sBAAA,CAAAH,OAAA;AAEA,IAAM;EAAEI,SAAS,EAAEC;AAAoB,CAAC,GAAGC,qBAAE;AAQtC,IAAMC,wBAA4D,GAAAC,OAAA,CAAAD,wBAAA,GAAG,IAAIE,GAAG,CAAC,CAAC;AAG9E,SAASC,mBAAmBA,CAC/BC,GAAW,EACXC,OAAkC,EAC5B;EAEN,IAAMC,GAAG,GAAG,IAAAC,yBAAkB,EAC1BP,wBAAwB,EACxBI,GAAG,EACH,MAAM;IACF,IAAMI,QAAQ,GAAG,IAAAC,uBAAY,EAAC;MAC1BL,GAAG;MACHM,WAAW,EAAEA,CAAA,KAAM,IAAI;MACvBC,aAAa,EAAEb,mBAAmB;MAClCc,gBAAgB,EAAEP,OAAO,GAAG;QAAEA;MAAQ,CAAC,GAAGQ;IAC9C,CAAC,CAAC;IACF,OAAO;MACHT,GAAG;MACHU,MAAM,EAAEN,QAAQ;MAChBO,QAAQ,EAAE;IACd,CAAC;EACL,CAAC,EACAC,KAAK,IAAK;IACPA,KAAK,CAACD,QAAQ,GAAGC,KAAK,CAACD,QAAQ,GAAG,CAAC;EACvC,CACJ,CAAC;EACD,OAAOT,GAAG,CAACQ,MAAM;AACrB;AAGO,SAASG,yBAAyBA,CACrCb,GAAW,EACb;EACE,IAAMc,GAAG,GAAG,IAAAC,wBAAiB,EAACnB,wBAAwB,EAAEI,GAAG,CAAC;EAC5Dc,GAAG,CAACH,QAAQ,GAAGG,GAAG,CAACH,QAAQ,GAAG,CAAC;EAC/B,IAAIG,GAAG,CAACH,QAAQ,KAAK,CAAC,EAAE;IACpBf,wBAAwB,CAACoB,MAAM,CAAChB,GAAG,CAAC;IACpCc,GAAG,CAACJ,MAAM,CAACO,OAAO,CAAC,CAAC;EACxB;AACJ","ignoreList":[]}