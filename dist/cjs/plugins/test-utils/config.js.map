{"version":3,"file":"config.js","names":["_index","require","_broadcastChannel","_nodeEvents","_interopRequireDefault","_index2","isDeno","exports","window","isBun","process","versions","bun","isNode","config","setConfig","newConfig","initDone","getConfig","initTestEnvironment","ensureNotFalsy","getEnvVariables","ret","forEach","k","Deno","env","get","__karma__","ENV_VARIABLES","DEFAULT_STORAGE","isFastMode","NODE_ENV","err","broadcastChannelEnforceOptions","type","oldConsoleLog","console","log","bind","oldConsoleDir","dir","newLog","value","isPromise","Error","JSON","stringify","setMaxListeners","events","EventEmitter","defaultMaxListeners","startTime","performance","now","logTime","msg","diff","getEncryptedStorage","baseStorage","storage","getStorage","hasEncryption","wrappedKeyEncryptionCryptoJsStorage","isNotOneOfTheseStorages","storageNames","isName","name","includes","getPassword","Promise","resolve","randomCouchString"],"sources":["../../../../src/plugins/test-utils/config.ts"],"sourcesContent":["/// <reference path=\"../../../node_modules/@types/mocha/index.d.ts\" />\r\nimport {\r\n    ensureNotFalsy,\r\n    isPromise,\r\n    randomCouchString\r\n} from '../utils/index.ts';\r\nimport {\r\n    enforceOptions as broadcastChannelEnforceOptions\r\n} from 'broadcast-channel';\r\nimport events from 'node:events';\r\nimport * as path from 'node:path';\r\nimport url from 'node:url';\r\nimport type { RxStorage, RxTestStorage } from '../../types';\r\nimport { wrappedKeyEncryptionCryptoJsStorage } from '../encryption-crypto-js/index.ts';\r\n\r\nexport type TestConfig = {\r\n    storage: RxTestStorage;\r\n};\r\n\r\nexport const isDeno = typeof window !== 'undefined' && 'Deno' in window;\r\nexport const isBun = typeof process !== 'undefined' && !!process.versions.bun;\r\nexport const isNode = !isDeno && !isBun && typeof window === 'undefined';\r\n\r\nlet config: TestConfig;\r\n\r\nexport function setConfig(newConfig: TestConfig) {\r\n    config = newConfig;\r\n}\r\n\r\nlet initDone = false;\r\nexport function getConfig() {\r\n    if (!initDone) {\r\n        initTestEnvironment();\r\n        initDone = true;\r\n    }\r\n    return ensureNotFalsy(config, 'testConfig not set')\r\n}\r\n\r\n\r\ndeclare const Deno: any;\r\nfunction getEnvVariables() {\r\n    if (isDeno) {\r\n        const ret: any = {};\r\n        [\r\n            'DEFAULT_STORAGE',\r\n            'NODE_ENV'\r\n        ].forEach(k => {\r\n            ret[k] = Deno.env.get(k);\r\n        });\r\n        return ret;\r\n    }\r\n\r\n    return isBun || isNode ? process.env : (window as any).__karma__.config.env;\r\n}\r\nexport const ENV_VARIABLES = getEnvVariables();\r\nexport const DEFAULT_STORAGE = ENV_VARIABLES.DEFAULT_STORAGE as string;\r\n\r\nexport function isFastMode(): boolean {\r\n    try {\r\n        return ENV_VARIABLES.NODE_ENV === 'fast';\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function initTestEnvironment() {\r\n    if (ENV_VARIABLES.NODE_ENV === 'fast') {\r\n        broadcastChannelEnforceOptions({\r\n            type: 'simulate'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Overwrite the console for easier debugging\r\n     */\r\n    const oldConsoleLog = console.log.bind(console);\r\n    const oldConsoleDir = console.dir.bind(console);\r\n    function newLog(this: typeof console, value: any) {\r\n        if (isPromise(value)) {\r\n            oldConsoleDir(value);\r\n            throw new Error('cannot log Promise(), you should await it first');\r\n        }\r\n        if (typeof value === 'string' || typeof value === 'number') {\r\n            oldConsoleLog(value);\r\n            return;\r\n        }\r\n        try {\r\n            JSON.stringify(value);\r\n            oldConsoleLog(JSON.stringify(value, null, 4));\r\n        } catch (err) {\r\n            oldConsoleDir(value);\r\n        }\r\n    }\r\n    console.log = newLog.bind(console);\r\n    console.dir = newLog.bind(console);\r\n\r\n    console.log('DEFAULT_STORAGE: ' + DEFAULT_STORAGE);\r\n\r\n    if (isNode) {\r\n        process.setMaxListeners(100);\r\n\r\n        events.EventEmitter.defaultMaxListeners = 100;\r\n\r\n        /**\r\n         * Add a global function to process, so we can debug timings\r\n         */\r\n        (process as any).startTime = performance.now();\r\n        (process as any).logTime = (msg: string = '') => {\r\n            const diff = performance.now() - (process as any).startTime;\r\n            console.log('process logTime(' + msg + ') ' + diff + 'ms');\r\n        };\r\n    }\r\n}\r\n\r\nexport function getEncryptedStorage(baseStorage = getConfig().storage.getStorage()): RxStorage<any, any> {\r\n    const ret = config.storage.hasEncryption ?\r\n        baseStorage :\r\n        wrappedKeyEncryptionCryptoJsStorage({\r\n            storage: baseStorage\r\n        });\r\n    return ret;\r\n}\r\n\r\nexport function isNotOneOfTheseStorages(storageNames: string[]) {\r\n    const isName = getConfig().storage.name;\r\n    if (storageNames.includes(isName)) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport function getPassword(): Promise<string> {\r\n    if (getConfig().storage.hasEncryption) {\r\n        return ensureNotFalsy(getConfig().storage.hasEncryption)();\r\n    } else {\r\n        return Promise.resolve('test-password-' + randomCouchString(10));\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}