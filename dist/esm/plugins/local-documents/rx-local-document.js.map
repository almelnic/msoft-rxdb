{"version":3,"file":"rx-local-document.js","names":["distinctUntilChanged","filter","map","shareReplay","startWith","overwritable","getDocumentDataOfRxChangeEvent","basePrototype","createRxDocumentConstructor","newRxError","newRxTypeError","getWrittenDocumentsFromBulkWriteResponse","writeSingle","flatClone","getFromMapOrThrow","getProperty","RXJS_SHARE_REPLAY_DEFAULTS","getLocalDocStateByParent","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","isRxDatabase","RxDocumentParent","RxLocalDocumentClass","_RxDocumentParent","id","jsonData","parent","_this2","call","_inheritsLoose","RxLocalDocumentPrototype","isLocal","allAttachments$","document","primaryPath","primary","$","_this","state","pipe","changeEvent","documentId","docCache","getLatestDocumentData","prev","curr","_rev","docData","getCachedRxDocument","$$","db","getRxDatabaseFromLocalDocument","reactivity","getReactivityFactory","fromObservable","getLatest","_data","deleted$$","deleted$","deleted","latestDocData","get","objPath","undefined","valueObj","deepFreezeWhenDevMode","get$","isDevMode","includes","localDocument","data","get$$","incrementalModify","mutationFunction","incrementalWriteQueue","addWrite","then","result","incrementalPatch","patch","Object","entries","forEach","k","v","_saveData","newData","oldData","writeRows","previous","storageInstance","bulkWrite","res","error","success","collection","schema","remove","writeData","_deleted","writeResult","INIT_DONE","_init","docBaseProto","props","getOwnPropertyNames","key","exists","getOwnPropertyDescriptor","desc","defineProperty","getThrowingFun","functionName","createRxLocalDocument","newDoc","setPrototypeOf","prototype","doc","database"],"sources":["../../../../src/plugins/local-documents/rx-local-document.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport {\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    shareReplay,\r\n    startWith\r\n} from 'rxjs';\r\nimport { overwritable } from '../../overwritable.ts';\r\nimport { getDocumentDataOfRxChangeEvent } from '../../rx-change-event.ts';\r\nimport {\r\n    basePrototype,\r\n    createRxDocumentConstructor\r\n} from '../../rx-document.ts';\r\nimport {\r\n    newRxError,\r\n    newRxTypeError\r\n} from '../../rx-error.ts';\r\nimport { getWrittenDocumentsFromBulkWriteResponse, writeSingle } from '../../rx-storage-helper.ts';\r\nimport type {\r\n    LocalDocumentModifyFunction,\r\n    RxCollection,\r\n    RxDatabase,\r\n    RxDocument,\r\n    RxDocumentData,\r\n    RxDocumentWriteData,\r\n    RxLocalDocument,\r\n    RxLocalDocumentData\r\n} from '../../types/index.d.ts';\r\nimport {\r\n    flatClone,\r\n    getDefaultRevision,\r\n    getDefaultRxDocumentMeta,\r\n    getFromMapOrThrow,\r\n    getProperty,\r\n    RXJS_SHARE_REPLAY_DEFAULTS\r\n} from '../../plugins/utils/index.ts';\r\nimport { getLocalDocStateByParent, LOCAL_DOC_STATE_BY_PARENT_RESOLVED } from './local-documents-helper.ts';\r\nimport { isRxDatabase } from '../../rx-database.ts';\r\n\r\nconst RxDocumentParent = createRxDocumentConstructor() as any;\r\n\r\nclass RxLocalDocumentClass<DocData = any> extends RxDocumentParent {\r\n    constructor(\r\n        public readonly id: string,\r\n        jsonData: DocData,\r\n        public readonly parent: RxCollection | RxDatabase\r\n    ) {\r\n        super(null, jsonData);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst RxLocalDocumentPrototype: any = {\r\n    get isLocal() {\r\n        return true;\r\n    },\r\n\r\n    //\r\n    // overwrites\r\n    //\r\n    get allAttachments$() {\r\n        // this is overwritten here because we cannot re-set getters on the prototype\r\n        throw newRxError('LD1', {\r\n            document: this\r\n        });\r\n    },\r\n    get primaryPath() {\r\n        return 'id';\r\n    },\r\n    get primary() {\r\n        return this.id;\r\n    },\r\n    get $(): Observable<RxLocalDocument<any, any>> {\r\n        const _this: RxLocalDocumentClass = this as any;\r\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\r\n        return _this.parent.$.pipe(\r\n            filter(changeEvent => changeEvent.documentId === this.primary),\r\n            filter(changeEvent => changeEvent.isLocal),\r\n            map(changeEvent => getDocumentDataOfRxChangeEvent(changeEvent)),\r\n            startWith(state.docCache.getLatestDocumentData(this.primary)),\r\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\r\n            map(docData => state.docCache.getCachedRxDocument(docData)),\r\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\r\n        ) as Observable<any>;\r\n    },\r\n    get $$(): any {\r\n        const _this: RxLocalDocumentClass = this as any;\r\n        const db = getRxDatabaseFromLocalDocument(_this);\r\n        const reactivity = db.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.$,\r\n            _this.getLatest()._data,\r\n            db\r\n        );\r\n    },\r\n    get deleted$$() {\r\n        const _this: RxLocalDocumentClass = this as any;\r\n        const db = getRxDatabaseFromLocalDocument(_this);\r\n        const reactivity = db.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.deleted$,\r\n            _this.getLatest().deleted,\r\n            db\r\n        );\r\n    },\r\n    getLatest(this: RxLocalDocument<any>): RxLocalDocument<any> {\r\n        const state = getFromMapOrThrow(LOCAL_DOC_STATE_BY_PARENT_RESOLVED, this.parent);\r\n        const latestDocData = state.docCache.getLatestDocumentData(this.primary);\r\n        return state.docCache.getCachedRxDocument(latestDocData) as any;\r\n    },\r\n    get(this: RxDocument, objPath: string) {\r\n        objPath = 'data.' + objPath;\r\n\r\n        if (!this._data) {\r\n            return undefined;\r\n        }\r\n        if (typeof objPath !== 'string') {\r\n            throw newRxTypeError('LD2', {\r\n                objPath\r\n            });\r\n        }\r\n\r\n        let valueObj = getProperty(this._data, objPath);\r\n        valueObj = overwritable.deepFreezeWhenDevMode(valueObj);\r\n        return valueObj;\r\n    },\r\n    get$(this: RxDocument, objPath: string) {\r\n        objPath = 'data.' + objPath;\r\n\r\n        if (overwritable.isDevMode()) {\r\n            if (objPath.includes('.item.')) {\r\n                throw newRxError('LD3', {\r\n                    objPath\r\n                });\r\n            }\r\n            if (objPath === this.primaryPath) {\r\n                throw newRxError('LD4');\r\n            }\r\n        }\r\n        return this.$\r\n            .pipe(\r\n                map(localDocument => localDocument._data),\r\n                map(data => getProperty(data, objPath)),\r\n                distinctUntilChanged()\r\n            );\r\n    },\r\n    get$$(this: RxDocument, objPath: string) {\r\n        const db = getRxDatabaseFromLocalDocument(this as any);\r\n        const reactivity = db.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            this.get$(objPath),\r\n            this.getLatest().get(objPath),\r\n            db\r\n        );\r\n    },\r\n    async incrementalModify<DocData>(\r\n        this: RxLocalDocument<any, DocData>,\r\n        mutationFunction: LocalDocumentModifyFunction<any>\r\n    ) {\r\n        const state = await getLocalDocStateByParent(this.parent);\r\n\r\n        return state.incrementalWriteQueue.addWrite(\r\n            this._data as any,\r\n            async (docData) => {\r\n                docData.data = await mutationFunction(docData.data, this);\r\n                return docData;\r\n            }\r\n        ).then(result => state.docCache.getCachedRxDocument(result as any));\r\n    },\r\n    incrementalPatch(patch: Partial<any>) {\r\n        return this.incrementalModify((docData: any) => {\r\n            Object\r\n                .entries(patch)\r\n                .forEach(([k, v]) => {\r\n                    docData[k] = v;\r\n                });\r\n            return docData;\r\n        });\r\n    },\r\n    async _saveData(this: RxLocalDocument<any>, newData: RxDocumentData<RxLocalDocumentData>) {\r\n        const state = await getLocalDocStateByParent(this.parent);\r\n        const oldData: RxDocumentData<RxLocalDocumentData> = this._data;\r\n        newData.id = (this as any).id;\r\n        const writeRows = [{\r\n            previous: oldData,\r\n            document: newData\r\n        }];\r\n        return state.storageInstance.bulkWrite(writeRows, 'local-document-save-data')\r\n            .then((res) => {\r\n                if (res.error[0]) {\r\n                    throw res.error[0];\r\n                }\r\n                const success = getWrittenDocumentsFromBulkWriteResponse(this.collection.schema.primaryPath, writeRows, res)[0];\r\n                newData = flatClone(newData);\r\n                newData._rev = success._rev;\r\n            });\r\n    },\r\n\r\n    async remove(this: RxLocalDocument<any>): Promise<RxLocalDocument<any>> {\r\n        const state = await getLocalDocStateByParent(this.parent);\r\n        const writeData = flatClone(this._data);\r\n        writeData._deleted = true;\r\n        return writeSingle(state.storageInstance, {\r\n            previous: this._data,\r\n            document: writeData\r\n        }, 'local-document-remove')\r\n            .then((writeResult) => state.docCache.getCachedRxDocument(writeResult) as any);\r\n    }\r\n};\r\n\r\n\r\n\r\nlet INIT_DONE = false;\r\nconst _init = () => {\r\n    if (INIT_DONE) return;\r\n    else INIT_DONE = true;\r\n\r\n    // add functions of RxDocument\r\n    const docBaseProto = basePrototype;\r\n    const props = Object.getOwnPropertyNames(docBaseProto);\r\n    props.forEach(key => {\r\n        const exists = Object.getOwnPropertyDescriptor(RxLocalDocumentPrototype, key);\r\n        if (exists) return;\r\n        const desc: any = Object.getOwnPropertyDescriptor(docBaseProto, key);\r\n        Object.defineProperty(RxLocalDocumentPrototype, key, desc);\r\n    });\r\n\r\n\r\n    /**\r\n     * Overwrite things that do not work on local documents\r\n     * with a throwing function.\r\n     */\r\n    const getThrowingFun = (k: string) => () => {\r\n        throw newRxError('LD6', {\r\n            functionName: k\r\n        });\r\n    };\r\n    [\r\n        'populate',\r\n        'update',\r\n        'putAttachment',\r\n        'getAttachment',\r\n        'allAttachments'\r\n    ].forEach((k: string) => RxLocalDocumentPrototype[k] = getThrowingFun(k));\r\n};\r\n\r\n\r\n\r\nexport function createRxLocalDocument<DocData>(\r\n    data: RxDocumentData<RxLocalDocumentData<DocData>>,\r\n    parent: any\r\n): RxLocalDocument<DocData> {\r\n    _init();\r\n    const newDoc = new RxLocalDocumentClass(data.id, data, parent);\r\n    Object.setPrototypeOf(newDoc, RxLocalDocumentPrototype);\r\n    newDoc.prototype = RxLocalDocumentPrototype;\r\n    return newDoc as any;\r\n}\r\n\r\n\r\nexport function getRxDatabaseFromLocalDocument(doc: RxLocalDocument<any> | RxLocalDocumentClass) {\r\n    const parent = doc.parent;\r\n    if (isRxDatabase(parent)) {\r\n        return parent;\r\n    } else {\r\n        return (parent as RxCollection).database;\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}