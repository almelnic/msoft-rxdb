{"version":3,"file":"schema-objects.js","names":["faker","randomNumber","randomString","schemas","ensureNotFalsy","lastOfArray","TEST_DATA_CHARSET","TEST_DATA_CHARSET_LAST_SORTED","split","sort","randomStringWithSpecialChars","length","humanData","passportId","age","firstName","person","lastName","simpleHumanData","simpleHumanV3Data","partial","defaultObj","Object","assign","simpleHumanAge","humanWithSubOther","other","NoIndexHuman","nestedHumanData","mainSkill","name","level","deepNestedHumanData","attack","good","count","bigHumanDocumentType","dnaHash","heroArrayData","skills","Array","fill","map","damage","simpleHeroArray","encryptedHumanData","secret","encryptedObjectHumanData","subname","encryptedDeepHumanDocumentType","firstLevelPassword","secretData","pw","deepSecret","darkhole","nestedSecret","compoundIndexData","passportCountry","compoundIndexNoStringData","nostringIndex","refHumanData","bestFriend","refHumanNestedData","foo","humanWithTimestampData","givenData","ret","id","updatedAt","Date","now","averageSchemaForFieldLength","averageSchema","averageSchemaData","properties","maxLength","var1","var2","maximum","deep","deep1","deep2","deeper","deepNr","list","pointData","x","number","int","y","humanWithIdAndAgeIndexDocumentType","humanWithCompositePrimary","info"],"sources":["../../../../src/plugins/test-utils/schema-objects.ts"],"sourcesContent":["/**\r\n * this file contains objects which match the schemas in schemas.js\r\n */\r\n\r\nimport { faker } from '@faker-js/faker';\r\n\r\nimport {\r\n    randomNumber,\r\n    randomString\r\n} from 'async-test-util';\r\nimport { HumanDocumentType } from './schemas.ts';\r\nimport * as schemas from './schemas.ts';\r\nimport { ensureNotFalsy, lastOfArray } from '../utils/index.ts';\r\n\r\n/**\r\n * Some storages had problems with umlauts and other special chars.\r\n * So we add these to all test strings.\r\n * TODO add emojis\r\n */\r\nexport const TEST_DATA_CHARSET = '0987654321ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz√§√∂√º√ñ√Ñ√ü√ú[]{}\\'';\r\nexport const TEST_DATA_CHARSET_LAST_SORTED = ensureNotFalsy(lastOfArray(TEST_DATA_CHARSET.split('').sort()));\r\n// const someEmojis = 'üòäüí©üëµüçå';\r\nexport function randomStringWithSpecialChars(length: number) {\r\n    return randomString(length, TEST_DATA_CHARSET);\r\n}\r\n\r\n\r\nexport interface SimpleHumanDocumentType {\r\n    passportId: string;\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\n\r\nexport function humanData(\r\n    passportId: string = randomStringWithSpecialChars(12),\r\n    age: number = randomNumber(10, 50),\r\n    firstName: string = faker.person.firstName()\r\n): HumanDocumentType {\r\n    return {\r\n        passportId: passportId,\r\n        firstName,\r\n        lastName: faker.person.lastName(),\r\n        age\r\n    };\r\n}\r\n\r\nexport function simpleHumanData(): SimpleHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        lastName: faker.person.lastName()\r\n    };\r\n}\r\n\r\nexport interface SimpleHumanV3DocumentType {\r\n    passportId: string;\r\n    age: number;\r\n    oneOptional?: string;\r\n}\r\nexport function simpleHumanV3Data(partial: Partial<SimpleHumanV3DocumentType> = {}): SimpleHumanV3DocumentType {\r\n    const defaultObj = {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        age: randomNumber(10, 50)\r\n    };\r\n    return Object.assign(\r\n        defaultObj,\r\n        partial\r\n    );\r\n}\r\n\r\nexport interface SimpleHumanAgeDocumentType {\r\n    passportId: string;\r\n    age: string;\r\n}\r\nexport function simpleHumanAge(partial: Partial<SimpleHumanAgeDocumentType> = {}): SimpleHumanAgeDocumentType {\r\n    const defaultObj = {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        age: randomNumber(10, 50) + ''\r\n    };\r\n    return Object.assign(\r\n        defaultObj,\r\n        partial\r\n    );\r\n}\r\n\r\nexport interface HumanWithSubOtherDocumentType {\r\n    passportId: string;\r\n    other: {\r\n        age: number;\r\n    };\r\n}\r\nexport function humanWithSubOther(): HumanWithSubOtherDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        other: {\r\n            age: randomNumber(10, 50)\r\n        }\r\n    };\r\n}\r\n\r\nexport interface NoIndexHumanDocumentType {\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\nexport function NoIndexHuman(): NoIndexHumanDocumentType {\r\n    return {\r\n        firstName: faker.person.firstName(),\r\n        lastName: faker.person.lastName()\r\n    };\r\n}\r\n\r\nexport interface NestedHumanDocumentType {\r\n    passportId: string;\r\n    firstName: string;\r\n    mainSkill: {\r\n        name: string;\r\n        level: number;\r\n    };\r\n}\r\nexport function nestedHumanData(partial: Partial<NestedHumanDocumentType> = {}): NestedHumanDocumentType {\r\n    const defaultObj = {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        mainSkill: {\r\n            name: randomStringWithSpecialChars(6),\r\n            level: 5\r\n        }\r\n    };\r\n    return Object.assign(\r\n        defaultObj,\r\n        partial\r\n    );\r\n}\r\n\r\nexport interface DeepNestedHumanDocumentType {\r\n    passportId: string;\r\n    mainSkill: {\r\n        name: string;\r\n        attack: {\r\n            good: boolean;\r\n            count: number;\r\n        };\r\n    };\r\n}\r\nexport function deepNestedHumanData(): DeepNestedHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        mainSkill: {\r\n            name: randomStringWithSpecialChars(6),\r\n            attack: {\r\n                good: false,\r\n                count: 5\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport interface BigHumanDocumentType {\r\n    passportId: string;\r\n    dnaHash: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    age: number;\r\n}\r\nexport function bigHumanDocumentType(): BigHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        dnaHash: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        lastName: faker.person.lastName(),\r\n        age: randomNumber(10, 50)\r\n    };\r\n}\r\n\r\nexport interface HeroArrayDocumentType {\r\n    name: string;\r\n    skills: {\r\n        name: string;\r\n        damage: number;\r\n    }[];\r\n}\r\nexport function heroArrayData(): HeroArrayDocumentType {\r\n    return {\r\n        name: randomStringWithSpecialChars(6),\r\n        skills: new Array(3).fill(0).map(() => {\r\n            return {\r\n                name: randomStringWithSpecialChars(6),\r\n                damage: randomNumber(10, 50)\r\n            };\r\n        })\r\n    };\r\n}\r\n\r\nexport interface SimpleHeroArrayDocumentType {\r\n    name: string;\r\n    skills: string[];\r\n}\r\nexport function simpleHeroArray(partial: Partial<SimpleHeroArrayDocumentType> = {}): SimpleHeroArrayDocumentType {\r\n    const defaultObj = {\r\n        name: randomStringWithSpecialChars(6),\r\n        skills: new Array(3).fill(0).map(() => randomStringWithSpecialChars(6))\r\n    };\r\n    return Object.assign(\r\n        defaultObj,\r\n        partial\r\n    );\r\n}\r\n\r\nexport interface EncryptedHumanDocumentType {\r\n    passportId: string;\r\n    firstName: string;\r\n    secret: string;\r\n}\r\nexport function encryptedHumanData(secret = randomStringWithSpecialChars(12)): EncryptedHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        secret\r\n    };\r\n}\r\n\r\nexport interface EncryptedObjectHumanDocumentType {\r\n    passportId: string;\r\n    firstName: string;\r\n    secret: {\r\n        name: string;\r\n        subname: string;\r\n    };\r\n}\r\nexport function encryptedObjectHumanData(): EncryptedObjectHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        secret: {\r\n            name: randomStringWithSpecialChars(12),\r\n            subname: randomStringWithSpecialChars(12)\r\n        }\r\n    };\r\n}\r\n\r\nexport interface EncryptedDeepHumanDocumentType {\r\n    passportId: string;\r\n    firstName: string;\r\n    firstLevelPassword: string;\r\n    secretData: {\r\n        pw: string;\r\n    };\r\n    deepSecret: {\r\n        darkhole: {\r\n            pw: string;\r\n        };\r\n    };\r\n    nestedSecret: {\r\n        darkhole: {\r\n            pw: string;\r\n        };\r\n    };\r\n}\r\nexport function encryptedDeepHumanDocumentType(): EncryptedDeepHumanDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        firstName: faker.person.firstName(),\r\n        firstLevelPassword: randomStringWithSpecialChars(12),\r\n        secretData: {\r\n            pw: randomStringWithSpecialChars(12)\r\n        },\r\n        deepSecret: {\r\n            darkhole: {\r\n                pw: randomStringWithSpecialChars(12)\r\n            }\r\n        },\r\n        nestedSecret: {\r\n            darkhole: {\r\n                pw: randomStringWithSpecialChars(12)\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport interface CompoundIndexDocumentType {\r\n    passportId: string;\r\n    passportCountry: string;\r\n    age: number;\r\n}\r\nexport function compoundIndexData(): CompoundIndexDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        passportCountry: randomStringWithSpecialChars(12),\r\n        age: randomNumber(10, 50)\r\n    };\r\n}\r\n\r\nexport interface CompoundIndexNoStringDocumentType {\r\n    passportId: string;\r\n    passportCountry: { [prop: string]: string; };\r\n    age: number;\r\n}\r\nexport function compoundIndexNoStringData(): CompoundIndexNoStringDocumentType {\r\n    return {\r\n        passportId: randomStringWithSpecialChars(12),\r\n        passportCountry: { [randomStringWithSpecialChars(12)]: randomStringWithSpecialChars(12) },\r\n        age: randomNumber(10, 50)\r\n    };\r\n}\r\n\r\nexport interface NostringIndexDocumentType {\r\n    passportId: {};\r\n    firstName: string;\r\n}\r\nexport function nostringIndex(): NostringIndexDocumentType {\r\n    return {\r\n        passportId: {},\r\n        firstName: faker.person.firstName()\r\n    };\r\n}\r\n\r\nexport interface RefHumanDocumentType {\r\n    name: string;\r\n    bestFriend: string;\r\n}\r\nexport function refHumanData(bestFriend?: string): RefHumanDocumentType {\r\n    return {\r\n        name: randomStringWithSpecialChars(12),\r\n        bestFriend\r\n    } as any;\r\n}\r\n\r\nexport interface RefHumanNestedDocumentType {\r\n    name: string;\r\n    foo: {\r\n        bestFriend: string;\r\n    };\r\n}\r\nexport function refHumanNestedData(bestFriend?: string): RefHumanNestedDocumentType {\r\n    return {\r\n        name: randomStringWithSpecialChars(12),\r\n        foo: {\r\n            bestFriend\r\n        } as any\r\n    };\r\n}\r\nexport interface HumanWithTimestampNestedDocumentType extends HumanWithTimestampDocumentType {\r\n    address?: {\r\n        street: string;\r\n        suite: string;\r\n        city: string;\r\n        zipcode: string;\r\n        geo: {\r\n            lat: string;\r\n            lng: string;\r\n        };\r\n    }\r\n}\r\n\r\nexport interface HumanWithTimestampDocumentType {\r\n    id: string;\r\n    name: string;\r\n    age: number;\r\n    updatedAt: number;\r\n    deletedAt?: number;\r\n}\r\nexport function humanWithTimestampData(givenData: Partial<HumanWithTimestampDocumentType> = {}): HumanWithTimestampDocumentType {\r\n    let ret = {\r\n        id: randomStringWithSpecialChars(12),\r\n        name: faker.person.firstName(),\r\n        age: randomNumber(1, 100),\r\n        // use some time in the past week\r\n        updatedAt: Date.now()\r\n    };\r\n    ret = Object.assign({}, ret, givenData);\r\n    return ret;\r\n}\r\n\r\nexport interface AverageSchemaDocumentType {\r\n    id: string;\r\n    var1: string;\r\n    var2: number;\r\n    deep: {\r\n        deep1: string;\r\n        deep2: string;\r\n        deeper: {\r\n            deepNr: number;\r\n        };\r\n    };\r\n    list: {\r\n        deep1: string;\r\n        deep2: string;\r\n    }[];\r\n}\r\n\r\n\r\nconst averageSchemaForFieldLength = schemas.averageSchema() as any;\r\nexport function averageSchemaData(\r\n    partial: Partial<AverageSchemaDocumentType> = {}\r\n): AverageSchemaDocumentType {\r\n    return Object.assign(\r\n        {},\r\n        {\r\n            id: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.id.maxLength)),\r\n            var1: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.var1.maxLength)),\r\n            var2: randomNumber(100, ensureNotFalsy(averageSchemaForFieldLength.properties.var2.maximum)),\r\n            deep: {\r\n                deep1: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.deep.properties.deep1.maxLength)),\r\n                deep2: randomStringWithSpecialChars(ensureNotFalsy(averageSchemaForFieldLength.properties.deep.properties.deep2.maxLength)),\r\n                deeper: {\r\n                    deepNr: randomNumber(0, 10)\r\n                }\r\n            },\r\n            list: new Array(5).fill(0).map(() => ({\r\n                deep1: randomStringWithSpecialChars(5),\r\n                deep2: randomStringWithSpecialChars(8)\r\n            }))\r\n        },\r\n        partial\r\n    );\r\n}\r\n\r\nexport interface PointDocumentType {\r\n    id: string;\r\n    x: number;\r\n    y: number;\r\n}\r\nexport function pointData(): PointDocumentType {\r\n    return {\r\n        id: randomStringWithSpecialChars(12),\r\n        x: faker.number.int(),\r\n        y: faker.number.int()\r\n    };\r\n}\r\n\r\nexport interface HumanWithIdAndAgeIndexDocumentType {\r\n    id: string;\r\n    name: string;\r\n    age: number;\r\n}\r\nexport function humanWithIdAndAgeIndexDocumentType(\r\n    age: number = randomNumber(1, 100)\r\n): HumanWithIdAndAgeIndexDocumentType {\r\n    return {\r\n        id: randomStringWithSpecialChars(12),\r\n        name: faker.person.firstName(),\r\n        age\r\n    };\r\n}\r\n\r\nexport type HumanWithCompositePrimary = {\r\n    // optional because it might be created by RxDB and not known before\r\n    id?: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    info: {\r\n        age: number;\r\n    };\r\n};\r\nexport function humanWithCompositePrimary(partial: Partial<HumanWithCompositePrimary> = {}): HumanWithCompositePrimary {\r\n    const defaultObj = {\r\n        firstName: faker.person.firstName(),\r\n        lastName: faker.person.lastName(),\r\n        info: {\r\n            age: randomNumber(10, 50)\r\n        }\r\n    };\r\n    return Object.assign(\r\n        defaultObj,\r\n        partial\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]}